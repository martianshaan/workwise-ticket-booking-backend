// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String?   
  createdAt DateTime @default(now())
  bookings  Booking[]
}

model Booking {
  id        Int      @id @default(autoincrement())
  userId    Int?
  user      User?    @relation(fields: [userId], references: [id])
  seats     Seat[]   // Relation to Seat model
  status    String   @default("CONFIRMED") 
  createdAt DateTime @default(now())
}

model Seat {
  id          Int      @id @default(autoincrement())
  row         Int      // Row number (1-12, with 12 having only 3 seats)
  column      Int      // Seat position within the row (1-7, except for row 12 which has 1-3)
  bookingId   Int?     // Foreign key to Booking if the seat is booked
  booking     Booking? @relation(fields: [bookingId], references: [id])
  isReserved  Boolean  @default(false)
  reservedBy  String?
  version     Int      @default(0)  // version field for optimistic concurrency
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}


